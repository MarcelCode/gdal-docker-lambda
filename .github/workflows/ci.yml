name: CI

permissions:
  packages: write

on:
  push:
    paths:
      - 'dockerfiles/**'
      - 'scripts/deploy.py'
      - 'scripts/create-layer.sh'
      - 'tests/*'
      - '.github/workflows/ci.yml'
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        gdal-version: [ 3.6 ]
    steps:
      - uses: actions/checkout@v3

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install boto3 click

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Build
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: .
          load: true
          file: dockerfiles/Dockerfile.gdal${{ matrix.gdal-version }}
          tags: ghcr.io/${{ env.OWNER_LC }}/lambda-gdal:${{ matrix.gdal-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test
        run: |
          docker run \
            --platform=linux/amd64 \
            --entrypoint bash \
            -v ${{ github.workspace }}:/local \
            --rm ghcr.io/${{ env.OWNER_LC }}/lambda-gdal:${{ matrix.gdal-version }} \
            /local/tests/tests.sh

      - name: Publish docker image
        uses: docker/build-push-action@v4
        if: github.ref == 'refs/heads/master'
        with:
          platforms: linux/amd64
          context: .
          file: dockerfiles/Dockerfile.gdal${{ matrix.gdal-version }}
          push: true
          cache-from: type=gha
          tags: ghcr.io/${{ env.OWNER_LC }}/lambda-gdal:${{ matrix.gdal-version }}

      - name: Build and Deploy layers
        if: github.ref == 'refs/heads/master'
        run: |
          docker run \
            --platform=linux/amd64 \
            --entrypoint bash \
            -v ${{ github.workspace }}:/local \
            --rm ghcr.io/${{ env.OWNER_LC }}/lambda-gdal:${{ matrix.gdal-version }} \
            /local/scripts/create-layer.sh
          python scripts/deploy.py ${{ matrix.gdal-version }} --deploy

  update-layer:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: actions/setup-node@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: List layers
        run: |
          python scripts/list.py | jq > layer.json

      - name: Update resources
        uses: test-room-7/action-update-file@v1
        with:
          file-path: layer.json
          commit-msg: Update layer [skip ci]
          github-token: ${{ secrets.PACKAGE_TOKEN }}
