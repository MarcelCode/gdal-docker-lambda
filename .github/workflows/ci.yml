name: CI

on: [push]

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gdal-version: [2.4, 3.1]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install boto3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: create gdal docker image
        run: |
          docker build -f base/gdal${{ matrix.gdal-version }}/Dockerfile -t lambgeo/lambda:gdal${{ matrix.gdal-version }} .

      - name: Run Tests
        run: |
          docker run --rm lambgeo/lambda:gdal${{ matrix.gdal-version }} \
          --volume $(pwd)/:/local \
          sh -c "cd /local/tests && sh tests.sh"

      # - name: Push to DockerHub and Publish Layer
      #   if: contains(github.ref, 'tags')
      #   run: |
      #     docker push lambgeo/lambda:gdal${{ matrix.gdal-version }}
      #     docker run --rm base-gdal${{ matrix.gdal-version }} \
      #     --volume $(pwd)/:/local \
      #     sh -c "cd /local/scripts && sh create-lambda-layer.sh"


# PLACEHOLDER
  # base-2:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       gdal-version: [2.4, 3.1]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}


